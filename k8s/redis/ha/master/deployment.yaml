---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: session-database
  labels:
    app: redis-master
    component: ha
  annotations:
    # Redis master should have only 1 replica in HA setup
    kube-score/ignore: deployment-replicas
spec:
  replicas: 1  # Master should be single instance
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: redis-master
      component: ha
  template:
    metadata:
      labels:
        app: redis-master
        component: ha
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - redis-master
                topologyKey: kubernetes.io/hostname
      serviceAccountName: redis-master
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      containers:
        - name: redis-master
          image: redis:8.0-alpine@sha256:8c5ebd8e39ac3cfb85b4583dcd5f8b6b4c7b2da0c9f394b8e4aa52b7b2b8b6b7
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 6379
              name: redis
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: session-database-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: session-database-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: session-database-secret
                  key: redis-password
          args:
            - redis-server
            - --port
            - "6379"
            - --requirepass
            - $(REDIS_PASSWORD)
            - --masterauth
            - $(REDIS_PASSWORD)
            - --save
            - "900 1"
            - --save
            - "300 10"
            - --save
            - "60 10000"
            - --appendonly
            - "yes"
            - --appendfsync
            - everysec
          volumeMounts:
            - mountPath: /data
              name: redis-master-storage
            - mountPath: /tmp
              name: tmp-volume
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
              ephemeral-storage: "2Gi"
            limits:
              memory: "2Gi"
              cpu: "1000m"
              ephemeral-storage: "4Gi"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30
      volumes:
        - name: redis-master-storage
          persistentVolumeClaim:
            claimName: redis-master-pvc
        - name: tmp-volume
          emptyDir: {}
