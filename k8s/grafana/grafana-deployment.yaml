---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: session-database
  labels:
    app: grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grafana
      component: monitoring
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - grafana
                topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      containers:
        - name: grafana
          image: grafana/grafana:10.4.0@sha256:5aa3968e9e5b66d45ca0e2db24c23db5b44c8c0d9ee4a893ab7b12012b7e5d24
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "512Mi"
              cpu: "500m"
              ephemeral-storage: "2Gi"
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: tmp
          emptyDir: {}
