---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-tls-config
  namespace: session-database
  labels:
    app: session-database
    component: security
data:
  generate-certs.sh: |
    #!/bin/bash
    set -euo pipefail

    CERT_DIR="/tls"

    # Create certificate directory
    mkdir -p "${CERT_DIR}"

    # Generate CA private key
    openssl genrsa -out "${CERT_DIR}/ca-key.pem" 4096

    # Generate CA certificate
    openssl req -new -x509 -days 365 -key "${CERT_DIR}/ca-key.pem" \
        -out "${CERT_DIR}/ca-cert.pem" \
        -subj "/C=US/ST=State/L=City/O=Organization/CN=Redis-CA"

    # Generate Redis server private key
    openssl genrsa -out "${CERT_DIR}/redis-server-key.pem" 4096

    # Generate Redis server certificate signing request
    openssl req -new -key "${CERT_DIR}/redis-server-key.pem" \
        -out "${CERT_DIR}/redis-server.csr" \
        -subj "/C=US/ST=State/L=City/O=Organization/CN=redis-server"

    # Generate Redis server certificate
    openssl x509 -req -days 365 -in "${CERT_DIR}/redis-server.csr" \
        -CA "${CERT_DIR}/ca-cert.pem" -CAkey "${CERT_DIR}/ca-key.pem" \
        -CAcreateserial -out "${CERT_DIR}/redis-server-cert.pem"

    # Generate Redis client private key
    openssl genrsa -out "${CERT_DIR}/redis-client-key.pem" 4096

    # Generate Redis client certificate signing request
    openssl req -new -key "${CERT_DIR}/redis-client-key.pem" \
        -out "${CERT_DIR}/redis-client.csr" \
        -subj "/C=US/ST=State/L=City/O=Organization/CN=redis-client"

    # Generate Redis client certificate
    openssl x509 -req -days 365 -in "${CERT_DIR}/redis-client.csr" \
        -CA "${CERT_DIR}/ca-cert.pem" -CAkey "${CERT_DIR}/ca-key.pem" \
        -CAcreateserial -out "${CERT_DIR}/redis-client-cert.pem"

    # Set proper permissions
    chmod 600 "${CERT_DIR}"/*.pem

    echo "TLS certificates generated successfully"

  redis-tls.conf: |
    # TLS Configuration for Redis
    tls-port 6380
    port 0

    # Server certificates
    tls-cert-file /tls/redis-server-cert.pem
    tls-key-file /tls/redis-server-key.pem
    tls-ca-cert-file /tls/ca-cert.pem

    # Client certificate verification
    tls-auth-clients yes

    # TLS protocols
    tls-protocols "TLSv1.2 TLSv1.3"
    tls-ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256"

    # TLS session caching
    tls-session-caching yes
    tls-session-cache-size 20480
    tls-session-cache-timeout 60
